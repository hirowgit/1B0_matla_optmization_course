<?xml version="1.0" encoding="utf-8"?>
<mscript xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd">
   <version>9.4</version>
   <release>2018a</release>
   <date>2021-01-17</date>
   <cell style="overview">
      <count>1</count>
      <steptitle style="document">MATLAB programming course for beginners, supported by Wagatsuma Lab@Kyutech</steptitle>
      <text>
         <p>/* The MIT License (MIT): Copyright (c) 2021 Hiroaki Wagatsuma and Wagatsuma Lab@Kyutech</p>
         <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p>
         <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p>
         <p>THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */</p>
      </text>
      <cellOutputTarget>1</cellOutputTarget>
   </cell>
   <cell>
      <count>2</count>
      <steptitle>Specifications and requirements</steptitle>
      <text>
         <ol>
            <li>@Time    : 2021-1-16</li>
            <li>@Author  : Hiroaki Wagatsuma</li>
            <li>@Site    : https://github.com/hirowgit/1B0_matla_optmization_course</li>
            <li>@IDE     : MATLAB R2018a</li>
            <li>@File    : A2_Object_Move_Plus.m</li>
         </ol>
      </text>
      <cellOutputTarget>2</cellOutputTarget>
   </cell>
   <cell>
      <count>3</count>
      <steptitle>Main program</steptitle>
      <text>
         <p>clear all</p>
      </text>
      <mcode>clc

contr=[-0.15,0.15,0.7,0.7,-0.7,-0.7,-0.15,-0.15,0.15,0.15;1,1,1,-1,-1,1,1,-1,-1,1];
gAng=@(x1,y1,x2,y2) atan2(y2-y1,x2-x1);
RotM=@(theta) [cos(theta),-sin(theta);sin(theta),cos(theta)];

% Pcontr=RotM(gAng(x1,y1,x2,y2))*contr+repmat([x1;y1],[1,size(contr,2)]);


Ndstep=10;
Nd=7;
Radi=2*4*Ndstep/(2*pi);
Radi=4*Radi;

prange=pi/2;

dAng=prange*(Ndstep./(2*pi*Radi*(prange./(2*pi))));
% \delta \theta=R_p \cdot \frac{N_d}{2\pi r \frac{R_p}{2\pi}}\\ R_p=prange, \\ N_d=Ndstep
tAng=0:(dAng):prange;
tAng=fliplr(tAng);

sTraj=[(Radi.*cos(tAng))' (Radi.*sin(tAng))'];
sTraj_full=sTraj;

xS=0; yS=Radi;
yPos=repmat(yS,[1,(Nd+1)]);
xPos=-(0:Ndstep:(Nd+1)*Ndstep)+xS;
sTraj=[xPos(2:Nd+1)' yPos(2:Nd+1)'];
sTraj_full=[flipud(sTraj); sTraj_full];

xS=Radi; yS=0;
xPos=repmat(xS,[1,(Nd+1)]);
yPos=-(0:Ndstep:(Nd+1)*Ndstep)+yS;
sTraj=[xPos(2:Nd+1)' yPos(2:Nd+1)'];
sTraj_full=[sTraj_full; sTraj];


figure(1); clf

plot(sTraj_full(:,1),sTraj_full(:,2),'.-','lineWidth',2,'MarkerSize',20);
axis equal;
grid on;
title('Trajectory');
xlabel('x'); ylabel('y');

figure(31);clf;
plot(sTraj_full,'.-');
grid on;
title('Temporal sequence of x and y coordinates to reconstract the trajectory');
xlabel('x'); ylabel('y');

figure(4); clf;

marginR=[-20 20];
for k=1:size(sTraj_full,1)-1
    x1=sTraj_full(k,1); y1=sTraj_full(k,2);
    x2=sTraj_full(k+1,1); y2=sTraj_full(k+1,2);
    Pcontr=RotM(gAng(x1,y1,x2,y2))*contr+repmat([x1;y1],[1,size(contr,2)]);
    plot(Pcontr(1,:),Pcontr(2,:),'.-','lineWidth',2,'MarkerSize',20),hold on;

    set(gca,'xlim',[min(sTraj_full(:,1)) max(sTraj_full(:,1))]+marginR,'ylim',[min(sTraj_full(:,2)) max(sTraj_full(:,2))]+marginR);
    plot(sTraj_full(:,1),sTraj_full(:,2),'.-','lineWidth',2,'MarkerSize',20);
    plot([x1,x2],[y1,y2],'k.-','lineWidth',2,'MarkerSize',20);
    axis equal; grid on; xlabel('x'); ylabel('y');
    title('Object movement in the trajectory');
    pause(0.2);
    drawnow;
    hold off
end</mcode>
      <mcode-xmlized>
         <mwsh:code xml:space="preserve">clc

contr=[-0.15,0.15,0.7,0.7,-0.7,-0.7,-0.15,-0.15,0.15,0.15;1,1,1,-1,-1,1,1,-1,-1,1];
gAng=@(x1,y1,x2,y2) atan2(y2-y1,x2-x1);
RotM=@(theta) [cos(theta),-sin(theta);sin(theta),cos(theta)];

<mwsh:comments xml:space="preserve">% Pcontr=RotM(gAng(x1,y1,x2,y2))*contr+repmat([x1;y1],[1,size(contr,2)]);</mwsh:comments>


Ndstep=10;
Nd=7;
Radi=2*4*Ndstep/(2*pi);
Radi=4*Radi;

prange=pi/2;

dAng=prange*(Ndstep./(2*pi*Radi*(prange./(2*pi))));
<mwsh:comments xml:space="preserve">% \delta \theta=R_p \cdot \frac{N_d}{2\pi r \frac{R_p}{2\pi}}\\ R_p=prange, \\ N_d=Ndstep</mwsh:comments>
tAng=0:(dAng):prange;
tAng=fliplr(tAng);

sTraj=[(Radi.*cos(tAng))' (Radi.*sin(tAng))'];
sTraj_full=sTraj;

xS=0; yS=Radi;
yPos=repmat(yS,[1,(Nd+1)]);
xPos=-(0:Ndstep:(Nd+1)*Ndstep)+xS;
sTraj=[xPos(2:Nd+1)' yPos(2:Nd+1)'];
sTraj_full=[flipud(sTraj); sTraj_full];

xS=Radi; yS=0;
xPos=repmat(xS,[1,(Nd+1)]);
yPos=-(0:Ndstep:(Nd+1)*Ndstep)+yS;
sTraj=[xPos(2:Nd+1)' yPos(2:Nd+1)'];
sTraj_full=[sTraj_full; sTraj];


figure(1); clf

plot(sTraj_full(:,1),sTraj_full(:,2),<mwsh:strings xml:space="preserve">'.-'</mwsh:strings>,<mwsh:strings xml:space="preserve">'lineWidth'</mwsh:strings>,2,<mwsh:strings xml:space="preserve">'MarkerSize'</mwsh:strings>,20);
axis <mwsh:strings xml:space="preserve">equal</mwsh:strings>;
grid <mwsh:strings xml:space="preserve">on</mwsh:strings>;
title(<mwsh:strings xml:space="preserve">'Trajectory'</mwsh:strings>);
xlabel(<mwsh:strings xml:space="preserve">'x'</mwsh:strings>); ylabel(<mwsh:strings xml:space="preserve">'y'</mwsh:strings>);

figure(31);clf;
plot(sTraj_full,<mwsh:strings xml:space="preserve">'.-'</mwsh:strings>);
grid <mwsh:strings xml:space="preserve">on</mwsh:strings>;
title(<mwsh:strings xml:space="preserve">'Temporal sequence of x and y coordinates to reconstract the trajectory'</mwsh:strings>);
xlabel(<mwsh:strings xml:space="preserve">'x'</mwsh:strings>); ylabel(<mwsh:strings xml:space="preserve">'y'</mwsh:strings>);

figure(4); clf;

marginR=[-20 20];
<mwsh:keywords xml:space="preserve">for</mwsh:keywords> k=1:size(sTraj_full,1)-1
    x1=sTraj_full(k,1); y1=sTraj_full(k,2);
    x2=sTraj_full(k+1,1); y2=sTraj_full(k+1,2);
    Pcontr=RotM(gAng(x1,y1,x2,y2))*contr+repmat([x1;y1],[1,size(contr,2)]);
    plot(Pcontr(1,:),Pcontr(2,:),<mwsh:strings xml:space="preserve">'.-'</mwsh:strings>,<mwsh:strings xml:space="preserve">'lineWidth'</mwsh:strings>,2,<mwsh:strings xml:space="preserve">'MarkerSize'</mwsh:strings>,20),hold <mwsh:strings xml:space="preserve">on</mwsh:strings>;

    set(gca,<mwsh:strings xml:space="preserve">'xlim'</mwsh:strings>,[min(sTraj_full(:,1)) max(sTraj_full(:,1))]+marginR,<mwsh:strings xml:space="preserve">'ylim'</mwsh:strings>,[min(sTraj_full(:,2)) max(sTraj_full(:,2))]+marginR);
    plot(sTraj_full(:,1),sTraj_full(:,2),<mwsh:strings xml:space="preserve">'.-'</mwsh:strings>,<mwsh:strings xml:space="preserve">'lineWidth'</mwsh:strings>,2,<mwsh:strings xml:space="preserve">'MarkerSize'</mwsh:strings>,20);
    plot([x1,x2],[y1,y2],<mwsh:strings xml:space="preserve">'k.-'</mwsh:strings>,<mwsh:strings xml:space="preserve">'lineWidth'</mwsh:strings>,2,<mwsh:strings xml:space="preserve">'MarkerSize'</mwsh:strings>,20);
    axis <mwsh:strings xml:space="preserve">equal</mwsh:strings>; grid <mwsh:strings xml:space="preserve">on</mwsh:strings>; xlabel(<mwsh:strings xml:space="preserve">'x'</mwsh:strings>); ylabel(<mwsh:strings xml:space="preserve">'y'</mwsh:strings>);
    title(<mwsh:strings xml:space="preserve">'Object movement in the trajectory'</mwsh:strings>);
    pause(0.2);
    drawnow;
    hold <mwsh:strings xml:space="preserve">off</mwsh:strings><mwsh:keywords xml:space="preserve">end</mwsh:keywords></mwsh:code></mcode-xmlized>
      <mcode-count>1</mcode-count>
      <cellOutputTarget>3</cellOutputTarget>
      <img src="A2_Object_Move_Plus_01.png"/>
      <img src="A2_Object_Move_Plus_02.png"/>
      <img src="A2_Object_Move_Plus_03.png"/>
   </cell>
   <originalCode>%% MATLAB programming course for beginners, supported by Wagatsuma Lab@Kyutech 
%
% /* 
% The MIT License (MIT): 
% Copyright (c) 2021 Hiroaki Wagatsuma and Wagatsuma Lab@Kyutech
% 
% Permission is hereby granted, free of charge, to any person obtaining a
% copy of this software and associated documentation files (the
% "Software"), to deal in the Software without restriction, including
% without limitation the rights to use, copy, modify, merge, publish,
% distribute, sublicense, and/or sell copies of the Software, and to permit
% persons to whom the Software is furnished to do so, subject to the
% following conditions:
% 
% The above copyright notice and this permission notice shall be included
% in all copies or substantial portions of the Software.
% 
% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
% OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
% MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
% NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
% DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
% OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
% USE OR OTHER DEALINGS IN THE SOFTWARE. */
%% Specifications and requirements
% # @Time    : 2021-1-16 
% # @Author  : Hiroaki Wagatsuma
% # @Site    : https://github.com/hirowgit/1B0_matla_optmization_course
% # @IDE     : MATLAB R2018a
% # @File    : A2_Object_Move_Plus.m

%%  Main program
% clear all
clc

contr=[-0.15,0.15,0.7,0.7,-0.7,-0.7,-0.15,-0.15,0.15,0.15;1,1,1,-1,-1,1,1,-1,-1,1];
gAng=@(x1,y1,x2,y2) atan2(y2-y1,x2-x1);
RotM=@(theta) [cos(theta),-sin(theta);sin(theta),cos(theta)];

% Pcontr=RotM(gAng(x1,y1,x2,y2))*contr+repmat([x1;y1],[1,size(contr,2)]);


Ndstep=10;
Nd=7;
Radi=2*4*Ndstep/(2*pi);
Radi=4*Radi;

prange=pi/2;

dAng=prange*(Ndstep./(2*pi*Radi*(prange./(2*pi))));  
% \delta \theta=R_p \cdot \frac{N_d}{2\pi r \frac{R_p}{2\pi}}\\ R_p=prange, \\ N_d=Ndstep
tAng=0:(dAng):prange;
tAng=fliplr(tAng);

sTraj=[(Radi.*cos(tAng))' (Radi.*sin(tAng))'];  
sTraj_full=sTraj;

xS=0; yS=Radi;
yPos=repmat(yS,[1,(Nd+1)]);
xPos=-(0:Ndstep:(Nd+1)*Ndstep)+xS;
sTraj=[xPos(2:Nd+1)' yPos(2:Nd+1)'];
sTraj_full=[flipud(sTraj); sTraj_full];

xS=Radi; yS=0;
xPos=repmat(xS,[1,(Nd+1)]);
yPos=-(0:Ndstep:(Nd+1)*Ndstep)+yS;
sTraj=[xPos(2:Nd+1)' yPos(2:Nd+1)'];
sTraj_full=[sTraj_full; sTraj];


figure(1); clf

plot(sTraj_full(:,1),sTraj_full(:,2),'.-','lineWidth',2,'MarkerSize',20);
axis equal;
grid on;
title('Trajectory');
xlabel('x'); ylabel('y');

figure(31);clf;
plot(sTraj_full,'.-');
grid on;
title('Temporal sequence of x and y coordinates to reconstract the trajectory');
xlabel('x'); ylabel('y');

figure(4); clf;

marginR=[-20 20];
for k=1:size(sTraj_full,1)-1
    x1=sTraj_full(k,1); y1=sTraj_full(k,2);
    x2=sTraj_full(k+1,1); y2=sTraj_full(k+1,2);
    Pcontr=RotM(gAng(x1,y1,x2,y2))*contr+repmat([x1;y1],[1,size(contr,2)]);
    plot(Pcontr(1,:),Pcontr(2,:),'.-','lineWidth',2,'MarkerSize',20),hold on;
    
    set(gca,'xlim',[min(sTraj_full(:,1)) max(sTraj_full(:,1))]+marginR,'ylim',[min(sTraj_full(:,2)) max(sTraj_full(:,2))]+marginR);
    plot(sTraj_full(:,1),sTraj_full(:,2),'.-','lineWidth',2,'MarkerSize',20);
    plot([x1,x2],[y1,y2],'k.-','lineWidth',2,'MarkerSize',20);
    axis equal; grid on; xlabel('x'); ylabel('y');
    title('Object movement in the trajectory');
    pause(0.2);
    drawnow;
    hold off
end
</originalCode>
   <m-file>A2_Object_Move_Plus</m-file>
   <filename>/Users/hiro/Documents/github/1B0_matla_optmization_course/A2_Object_Move_Plus.m</filename>
   <outputdir>/Users/hiro/Documents/github/1B0_matla_optmization_course/A2_Object_Move_Plus</outputdir>
</mscript>